openapi: 3.0.0
info:
  title: ScalarTax
  description: Users API Documentation
  version: 1.0.0
  contact:
    name: API Support
    url: http://example.com/supportt
    email: support@example.com
  termsOfService: http://example.com/terms/
servers:
  - url: http://localhost:3001/scalarhubio
    description: Local server
paths:
  /scalartax/users/:
    post:
      tags:
        - Users
      summary: Create User
      description: This endpoint is used to create a new user within the scalartax.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User" 
        description: Created user object
        required: true
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Successful response
        '422':
          description:  Unprocessable Entity. Validation errors occurred during the creation.
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Failed to create locations
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    get:
      tags:
        - Users
      summary: List Users
      description: This endpoint retrieves a list of users associated with the scalartax.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User1"
                example:
                  - id: string
                    first_name: string
                    last_name: string
                    email: string
                    username: string
                    role_level: string
                    created_by_id: string | null
                    updated_by_id: string | null
                    created_at: string
                    updated_at: string
                    permission_obj:
                      id: string
                    company_name: string | null
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /scalartax/users/{id}:
    get:
      tags:
        - Users
      summary: Fetch User
      description: This endpoint retrieves information about a specific user within the scalartax.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User1"
                example:
                  id: string
                  first_name: string
                  last_name: string
                  email: string
                  username: string
                  role_level: string
                  created_by_id: string | null
                  updated_by_id: string | null
                  created_at: string
                  updated_at: string
                  permission_obj:
                    id: string
                  company_name: string | null              
        '404':
          description: Not Found.User with that Specific ID not Found.
          content:
            application/json:
              schema:
                type: object
                example:
                  error: S_l_Nexus Not Found.
        '500':
          description: Internal Serval Error.
    put:
      tags:
        - Users
      summary: Update User
      description: This endpoint allows the client to update the details of a specific user.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              ref: "#/components/schemas/User"
              example:
                 
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
                example:
                  message : Records updated and created successfully
        '400':
          description: Bad Request. Malformed request or invalid data.
        '404':
          description: Not Found. User with the Specific ID not Found.
          content:
            application/json:
              schema:
                type: object
                example:
                  error: User Not Found.
        '422':
          description: Unprocessable Entity. Validation errors occurred during the update.
          content:
            application/json:
              schema:
                type: object
                example:
                  errors: [Validation error message]
        '500':
          description: Internal Server Error'
    delete:
      tags:
        - Users
      summary: Delete User
      description: This endpoint is used to delete a specific user from the tenants.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK. User deleted successfully
        '404':
          description: Not Found. User with the Specific ID not Found.
          content:
            application/json:
              schema:
                type: object
                example:
                  error: User Not Found.
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        user:
          type: object
          properties:
            username:
              type: string
              description: User's username
            first_name:
              type: string
              description: User's first name
            last_name:
              type: string
              description: User's last name
            email:
              type: string
              format: email
              description: User's email address
            role_name:
              type: string
              description: User's role name
            role_permission:
              type: string
              description: Permissions associated with the user's role
            created_by_id:
              type: integer
              description: Identifier of the user who created this user
            updated_by_id:
              type: integer
              description: Identifier of the user who last updated this user
        company_name:
          type: string
          description: Name of the company
        entity_id:
          type: string
          description: Unique identifier for the entity
      required:
        - username
        - first_name
        - last_name
        - email
        - role_name
        - role_permission
        - created_by_id
        - updated_by_id
        - entity_id
        - company_name
    User1:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        email:
          type: string
          format: email
          description: User's email address
        username:
          type: string
          description: User's username
        role_level:
          type: string
          description: User's role level
        created_by_id:
          type: string
          description: Identifier of the user who created this user
        updated_by_id:
          type: string
          description: Identifier of the user who last updated this user
        created_at:
          type: string
          format: date-time
          description: Timestamp when the user was created
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the user was last updated
        permission_obj:
          type: object
          additionalProperties:
            type: string
          description: Object mapping account IDs to permission levels
        company_name:
          type: string
          nullable: true
          description: Name of the company, can be null
      required:
        - id
        - first_name
        - last_name
        - email
        - username
        - role_level
        - created_by_id
        - updated_by_id
        - created_at
        - updated_at
        - permission_obj
    